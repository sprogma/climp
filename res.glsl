
#define TIME_SPLITTING 1.0
#define NOTES_PER_SPLITTING 16


struct Xnote
{
    int tool;
    float start;
    float end;
    float frequency;
    float volume;
};


#define T(a1,b1,c1,d1,e1,a2,b2,c2,d2,e2,a3,b3,c3,d3,e3,a4,b4,c4,d4,e4,a5,b5,c5,d5,e5,a6,b6,c6,d6,e6,a7,b7,c7,d7,e7,a8,b8,c8,d8,e8,a9,b9,c9,d9,e9,a10,b10,c10,d10,e10,a11,b11,c11,d11,e11,a12,b12,c12,d12,e12,a13,b13,c13,d13,e13,a14,b14,c14,d14,e14,a15,b15,c15,d15,e15,a16,b16,c16,d16,e16)Xnote(a1,b1,c1,d1,e1),Xnote(a2,b2,c2,d2,e2),Xnote(a3,b3,c3,d3,e3),Xnote(a4,b4,c4,d4,e4),Xnote(a5,b5,c5,d5,e5),Xnote(a6,b6,c6,d6,e6),Xnote(a7,b7,c7,d7,e7),Xnote(a8,b8,c8,d8,e8),Xnote(a9,b9,c9,d9,e9),Xnote(a10,b10,c10,d10,e10),Xnote(a11,b11,c11,d11,e11),Xnote(a12,b12,c12,d12,e12),Xnote(a13,b13,c13,d13,e13),Xnote(a14,b14,c14,d14,e14),Xnote(a15,b15,c15,d15,e15),Xnote(a16,b16,c16,d16,e16)
#define Z 0.
Xnote array[464] = Xnote[](
T(0,0.0,4.0,879.998,0.3,2,0.5,0.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,0.0,4.0,879.998,0.3,2,0.5,0.75,110.0,0.3,0,1.0,5.0,879.998,0.3,2,1.5,1.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,0.0,4.0,879.998,0.3,0,1.0,5.0,879.998,0.3,2,1.5,1.75,110.0,0.3,0,2.0,6.0,879.998,0.3,2,2.5,2.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,0.0,4.0,879.998,0.3,0,1.0,5.0,879.998,0.3,0,2.0,6.0,879.998,0.3,2,2.5,2.75,110.0,0.3,0,3.0,7.0,879.998,0.3,2,3.5,3.75,110.0,0.3,2,3.75,4.0,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,0.0,4.0,879.998,0.3,0,1.0,5.0,879.998,0.3,0,2.0,6.0,879.998,0.3,0,3.0,7.0,879.998,0.3,2,3.5,3.75,110.0,0.3,2,3.75,4.0,110.0,0.3,0,4.0,8.0,879.998,0.3,2,4.5,4.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,0.0,4.0,879.998,0.3,0,1.0,5.0,879.998,0.3,0,2.0,6.0,879.998,0.3,0,3.0,7.0,879.998,0.3,2,3.75,4.0,110.0,0.3,0,4.0,8.0,879.998,0.3,2,4.5,4.75,110.0,0.3,0,5.0,9.0,879.998,0.3,2,5.5,5.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,1.0,5.0,879.998,0.3,0,2.0,6.0,879.998,0.3,0,3.0,7.0,879.998,0.3,0,4.0,8.0,879.998,0.3,0,5.0,9.0,879.998,0.3,2,5.5,5.75,110.0,0.3,0,6.0,10.0,879.998,0.3,2,6.5,6.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,2.0,6.0,879.998,0.3,0,3.0,7.0,879.998,0.3,0,4.0,8.0,879.998,0.3,0,5.0,9.0,879.998,0.3,0,6.0,10.0,879.998,0.3,2,6.5,6.75,110.0,0.3,0,7.0,11.0,879.998,0.3,2,7.5,7.75,110.0,0.3,2,7.75,8.0,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,3.0,7.0,879.998,0.3,0,4.0,8.0,879.998,0.3,0,5.0,9.0,879.998,0.3,0,6.0,10.0,879.998,0.3,0,7.0,11.0,879.998,0.3,2,7.5,7.75,110.0,0.3,2,7.75,8.0,110.0,0.3,0,8.0,12.0,523.25,0.3,2,8.5,8.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,4.0,8.0,879.998,0.3,0,5.0,9.0,879.998,0.3,0,6.0,10.0,879.998,0.3,0,7.0,11.0,879.998,0.3,2,7.75,8.0,110.0,0.3,0,8.0,12.0,523.25,0.3,2,8.5,8.75,110.0,0.3,0,9.0,13.0,523.25,0.3,2,9.5,9.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,5.0,9.0,879.998,0.3,0,6.0,10.0,879.998,0.3,0,7.0,11.0,879.998,0.3,0,8.0,12.0,523.25,0.3,0,9.0,13.0,523.25,0.3,2,9.5,9.75,110.0,0.3,0,10.0,14.0,523.25,0.3,2,10.5,10.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,6.0,10.0,879.998,0.3,0,7.0,11.0,879.998,0.3,0,8.0,12.0,523.25,0.3,0,9.0,13.0,523.25,0.3,0,10.0,14.0,523.25,0.3,2,10.5,10.75,110.0,0.3,0,11.0,15.0,523.25,0.3,2,11.5,11.75,110.0,0.3,2,11.75,12.0,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,7.0,11.0,879.998,0.3,0,8.0,12.0,523.25,0.3,0,9.0,13.0,523.25,0.3,0,10.0,14.0,523.25,0.3,0,11.0,15.0,523.25,0.3,2,11.5,11.75,110.0,0.3,2,11.75,12.0,110.0,0.3,0,12.0,16.0,879.998,0.3,2,12.5,12.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,8.0,12.0,523.25,0.3,0,9.0,13.0,523.25,0.3,0,10.0,14.0,523.25,0.3,0,11.0,15.0,523.25,0.3,2,11.75,12.0,110.0,0.3,0,12.0,16.0,879.998,0.3,2,12.5,12.75,110.0,0.3,0,13.0,17.0,879.998,0.3,2,13.5,13.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,9.0,13.0,523.25,0.3,0,10.0,14.0,523.25,0.3,0,11.0,15.0,523.25,0.3,0,12.0,16.0,879.998,0.3,0,13.0,17.0,879.998,0.3,2,13.5,13.75,110.0,0.3,0,14.0,18.0,879.998,0.3,2,14.5,14.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,10.0,14.0,523.25,0.3,0,11.0,15.0,523.25,0.3,0,12.0,16.0,879.998,0.3,0,13.0,17.0,879.998,0.3,0,14.0,18.0,879.998,0.3,2,14.5,14.75,110.0,0.3,0,15.0,19.0,879.998,0.3,2,15.5,15.75,110.0,0.3,2,15.75,16.0,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,11.0,15.0,523.25,0.3,0,12.0,16.0,879.998,0.3,0,13.0,17.0,879.998,0.3,0,14.0,18.0,879.998,0.3,0,15.0,19.0,879.998,0.3,2,15.5,15.75,110.0,0.3,2,15.75,16.0,110.0,0.3,0,16.0,20.0,523.25,0.3,2,16.5,16.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,12.0,16.0,879.998,0.3,0,13.0,17.0,879.998,0.3,0,14.0,18.0,879.998,0.3,0,15.0,19.0,879.998,0.3,2,15.75,16.0,110.0,0.3,0,16.0,20.0,523.25,0.3,2,16.5,16.75,110.0,0.3,0,17.0,21.0,879.998,0.3,2,17.5,17.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,13.0,17.0,879.998,0.3,0,14.0,18.0,879.998,0.3,0,15.0,19.0,879.998,0.3,0,16.0,20.0,523.25,0.3,0,17.0,21.0,879.998,0.3,2,17.5,17.75,110.0,0.3,0,18.0,22.0,523.25,0.3,2,18.5,18.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,14.0,18.0,879.998,0.3,0,15.0,19.0,879.998,0.3,0,16.0,20.0,523.25,0.3,0,17.0,21.0,879.998,0.3,0,18.0,22.0,523.25,0.3,2,18.5,18.75,110.0,0.3,0,19.0,23.0,879.998,0.3,2,19.5,19.75,110.0,0.3,2,19.75,20.0,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,15.0,19.0,879.998,0.3,0,16.0,20.0,523.25,0.3,0,17.0,21.0,879.998,0.3,0,18.0,22.0,523.25,0.3,0,19.0,23.0,879.998,0.3,2,19.5,19.75,110.0,0.3,2,19.75,20.0,110.0,0.3,0,20.0,24.0,523.25,0.3,0,20.0,24.0,879.998,0.3,2,20.5,20.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,16.0,20.0,523.25,0.3,0,17.0,21.0,879.998,0.3,0,18.0,22.0,523.25,0.3,0,19.0,23.0,879.998,0.3,2,19.75,20.0,110.0,0.3,0,20.0,24.0,523.25,0.3,0,20.0,24.0,879.998,0.3,2,20.5,20.75,110.0,0.3,0,21.0,25.0,523.25,0.3,0,21.0,25.0,879.998,0.3,2,21.5,21.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,17.0,21.0,879.998,0.3,0,18.0,22.0,523.25,0.3,0,19.0,23.0,879.998,0.3,0,20.0,24.0,523.25,0.3,0,20.0,24.0,879.998,0.3,0,21.0,25.0,523.25,0.3,0,21.0,25.0,879.998,0.3,2,21.5,21.75,110.0,0.3,0,22.0,26.0,523.25,0.3,0,22.0,26.0,879.998,0.3,2,22.5,22.75,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,18.0,22.0,523.25,0.3,0,19.0,23.0,879.998,0.3,0,20.0,24.0,523.25,0.3,0,20.0,24.0,879.998,0.3,0,21.0,25.0,523.25,0.3,0,21.0,25.0,879.998,0.3,0,22.0,26.0,523.25,0.3,0,22.0,26.0,879.998,0.3,2,22.5,22.75,110.0,0.3,0,23.0,27.0,523.25,0.3,0,23.0,27.0,879.998,0.3,2,23.5,23.75,110.0,0.3,2,23.75,24.0,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,19.0,23.0,879.998,0.3,0,20.0,24.0,523.25,0.3,0,20.0,24.0,879.998,0.3,0,21.0,25.0,523.25,0.3,0,21.0,25.0,879.998,0.3,0,22.0,26.0,523.25,0.3,0,22.0,26.0,879.998,0.3,0,23.0,27.0,523.25,0.3,0,23.0,27.0,879.998,0.3,2,23.5,23.75,110.0,0.3,2,23.75,24.0,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,20.0,24.0,523.25,0.3,0,20.0,24.0,879.998,0.3,0,21.0,25.0,523.25,0.3,0,21.0,25.0,879.998,0.3,0,22.0,26.0,523.25,0.3,0,22.0,26.0,879.998,0.3,0,23.0,27.0,523.25,0.3,0,23.0,27.0,879.998,0.3,2,23.75,24.0,110.0,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,21.0,25.0,523.25,0.3,0,21.0,25.0,879.998,0.3,0,22.0,26.0,523.25,0.3,0,22.0,26.0,879.998,0.3,0,23.0,27.0,523.25,0.3,0,23.0,27.0,879.998,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,22.0,26.0,523.25,0.3,0,22.0,26.0,879.998,0.3,0,23.0,27.0,523.25,0.3,0,23.0,27.0,879.998,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z),
T(0,23.0,27.0,523.25,0.3,0,23.0,27.0,879.998,0.3,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z,-1,Z,Z,Z,Z)
);


float random(float time) {
    return fract(sin(time * 78.233) * 43758.5453123);
}


float PianoSolo(float s, in Xnote note, float rnd){ 
    float freq[] = {
        1.0,
        0.5,
        0.2,
        0.05,
        0.1,
        0.0025,
        0.001
    };
    float v = note.volume, k = 1.0f - (float)(s - note.start) / (float)(note.end - note.start);
    v *= fmax(0.01f, k);
    
    float res = 0.0, dr;
    for (int fqid = 0; fqid < sizeof(freq) / sizeof(*freq); ++fqid)
    {
        float f = note.frequency * (fqid + 1);
        float fv = freq[fqid];
        dr = sin(s * f / 44100.0f * 0.5 * 3.1415926 * 2.0);
        res += fv*v*dr;
    }
    return res;
         }

float PianoBass(float s, in Xnote note, float rnd){ 
float freq[] = {
    0.5,
    0.6,
    0.05,
    0.7,
    0.05,
    0.25,
    0.15,
    0.8,
    0.015,
    0.005,
    0.015,
    0.1,
    0.015,
    0.005,
    0.015,
    0.6,
};
float v = note.volume, k = 1.0f - (float)(s - note.start) / (float)(note.end - note.start);
v *= fmax(0.01f, k);

float res = 0.0, dr;
for (int fqid = 0; fqid < sizeof(freq) / sizeof(*freq); ++fqid)
{
    float f = note.frequency * (fqid + 1) * 0.125;
    float fv = freq[fqid];
    dr = sin(s * f / 44100.0f * 0.5 * 3.1415926 * 2.0);
    res += fv*v*dr;
}
return res;
 }

float Drum(float s, in Xnote note, float rnd){ 
    float dr;
    float v = note.volume, k = 1.0f - (float)(s - note.start) / (float)(note.end - note.start);
    v *= fmax(0.01f, k);
    return v * rnd;
 }




vec2 mainSound(int samp, float time)
{
    float s = time;
    float rnd = random(time) * 2.0 - 1.0;
    float res = 0.0;

    // iterate from notes
    int beat = int(floor(s / float(TIME_SPLITTING)));
    
    for (int n = 0; n < NOTES_PER_SPLITTING; ++n)
    {
            if (array[beat * NOTES_PER_SPLITTING + n].tool != -1 && array[beat * NOTES_PER_SPLITTING + n].start <= s && s <= array[beat * NOTES_PER_SPLITTING + n].end)
        { 
            switch(array[beat * NOTES_PER_SPLITTING + n].tool)
            {
                case 0: res += PianoSolo(s * 44100.0, array[beat * notes_on_split + n], rnd); break;
case 1: res += PianoBass(s * 44100.0, array[beat * notes_on_split + n], rnd); break;
case 2: res += Drum(s * 44100.0, array[beat * notes_on_split + n], rnd); break;

            default: 
                break;   
            }
        }
    }
    
    return vec2(tanh(res));
}
